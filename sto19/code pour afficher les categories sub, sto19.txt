<div class="container">
    <br />
    <select id="categoriesList" name="categoriesList" [ngModel]="categorySelected"
        (ngModelChange)="setAnotherSelect(+$event)">
        <option value="-1"></option>
        <option *ngFor="let category of categories" value="{{ category.id }}">{{ category.name }}</option>
    </select>

    <select id="randomElementsList" class="box" name="randomElementsList" [ngModel]="randomElements"
        *ngIf="showRandomElements">
        <option value="-1"></option>
        <option *ngFor="let element of randomElements" value="{{ element.id }}">{{ element.name }}</option>
    </select>












export class FormulaireComponent {

  isSubmitted = false;

  loginForm: FormGroup;

  constructor(private fb: FormBuilder) { }

  ngOnInit(): void {
    this.loginForm = this.fb.group({
      username: ['', Validators.required],
      password: ['', Validators.required],
      email: ['', [Validators.required, Validators.email]],
      roleId: [1, Validators.required],
      requestDate: [''],
    });

    this.loginForm.get('roleId')?.valueChanges.subscribe((roleId) => {
      console.log('SEND API REQUEST AND UPDATE ROLE', roleId);
    });
    this.loginForm = this.fb.group({
      requestdate: ['']
    })
    this.loginForm.get('requestdate')?.patchValue(this.formatDate(new Date()));

  }

  public categories: ICategoryStructure[] = [
    { id: 1, name: 'Probleme de connexion', description: 'description1', blogIds: [1, 2] },
    { id: 2, name: 'Devenir actionnaire', description: 'description2', blogIds: [3, 4] },
    { id: 3, name: 'Demande dinformation', description: 'description3', blogIds: [5, 6] },
  ];
  public categorySelected: number = -1;

  public randomElements: ICategoryStructure[] = [];
  public randomElementSelected: number = -1;
  public showRandomElements = false;

  public setAnotherSelect(numberId: number) {
    this.categorySelected = numberId;
    this.showRandomElements = true;
    this.randomElements = [];
    switch (numberId) {
      case 1:
        this.randomElements = [
          { id: 4, name: 'Probléme à recourir à mes accés (identifiant)', description: 'description4', blogIds: [7, 8] },
          { id: 5, name: 'Problème à recourir à mes accès (mot de passe)', description: 'description5', blogIds: [9, 10] },
          { id: 6, name: 'Problème à recourir à mes accès (one time password)', description: 'description6', blogIds: [11, 12] },
        ];
        break;
      case 2:
        this.randomElements = [
          { id: 7, name: 'test7', description: 'description7', blogIds: [13, 14] },
          { id: 8, name: 'test8', description: 'description8', blogIds: [15, 16] },
          { id: 9, name: 'test9', description: 'description9', blogIds: [17, 18] },
        ];
        break;
      case 3:
        this.randomElements = [
          { id: 10, name: 'Recevoir le formulaire de convention d’ouverture de compte ', description: 'description10', blogIds: [19, 20] },
          { id: 11, name: 'test11', description: 'description11', blogIds: [21, 22] },
          { id: 12, name: 'test12', description: 'description12', blogIds: [23, 24] },
        ];
        break;
      default:
        this.showRandomElements = false;
        break;
    }
  }


  // début du formulaire 




p {
    font-family: Lato;
  }

  .box {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .box div {
    width: 100px;
    height: 100px;
  }
